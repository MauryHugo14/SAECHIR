xlab = "Coef (95%)",
col = fpColors(box = c("red4"),
lines = c("skyblue3")),
xticks = seq(0.6,1.1,0.05),
boxsize = 0.1,
vertices = TRUE,
txt_gp = fpTxtGp(label = list(gpar(fontfamily = "",
col = "#660001", cex = .75)),
ticks = gpar(fontfamily = "", cex = .5),
xlab  = gpar(fontfamily = "font", cex = .9)))
# On initialise une matrice pour stocker le coefficient et les intervalles de confiance
coef_HP = matrix(nrow = 0, ncol = 3)  # 3 colonnes : coefficient, IC inférieur, IC supérieur
annee = c(2013,2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022) # On met les années à étudier
# Maintenant, on filtre en retirant les val. extrêmes :
# - D'abord, on somme PLA_CHI par établissement et on trie par ordre décroissant
dt_intermediaire = data %>% select(FI, PLA_CHI) %>% group_by(FI) %>% summarize(PLA_CHI = sum(PLA_CHI)) %>% arrange(desc(PLA_CHI))
# Puis on sélectionne les 30 premières valeurs de FI pour l'exclusion
finess_a_exclure = dt_intermediaire$FI[1:30]
# Et on filtre les données en supprimant les lignes avec les finess à exclure
dt_pente_HP = data %>% filter(!FI %in% finess_a_exclure)
for (i in 1:9) {
# On filtre les données car il y a des valeurs extrêmes :
# - On extrait les données pour l'année i
a_i = data.frame(dt_pente_HP %>% filter(AN == 2013) %>% select(PLA_CHI))
# - On extrait les données pour l'année i + 1
a_i_plus = data.frame(dt_pente_HP %>% filter(AN == annee[i+1]) %>% select(PLA_CHI))
# Ajustement du modèle linéaire
mod = lm(a_i_plus[, 1] ~ a_i[, 1])
# On extrait les intervalles de confiance
conf_int = confint(mod)[2,]
# On extrait le coefficient du modèle (pas l'intercept)
coef_summary = summary(mod)$coefficients[1:2, ]
# On ajoute les résultats à la matrice coef_HP
coef_HP = rbind(coef_HP, c(coef_summary[2, 1], conf_int[1], conf_int[2]))
}
# On transforme la matrice en un tableau
coef_HP = data.frame(coef_HP)
# On nomme les colonnes
colnames(coef_HP) = c("Coefficient", "Lower", "Upper")
# On nomme les lignes
rownames(coef_HP) = c(2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022)
# On utilise la fonction foresplot() pour afficher les coefficients et leurs IC
forestplot(rownames(coef_HP), coef_HP$Coefficient,
coef_HP$Lower,
coef_HP$Upper,
zero = 1,
xlab = "Coef (95%)",
col = fpColors(box = c("red4"),
lines = c("skyblue3")),
xticks = seq(0.7,1.3,0.05),
boxsize = 0.1,
vertices = TRUE,
txt_gp = fpTxtGp(label = list(gpar(fontfamily = "",
col = "#660001", cex = .75)),
ticks = gpar(fontfamily = "", cex = .5),
xlab  = gpar(fontfamily = "font", cex = .9)))
View(dt_intermediaire)
# On initialise une matrice pour stocker le coefficient et les intervalles de confiance
coef_HP = matrix(nrow = 0, ncol = 3)  # 3 colonnes : coefficient, IC inférieur, IC supérieur
annee = c(2013,2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022) # On met les années à étudier
# Maintenant, on filtre en retirant les val. extrêmes :
# - D'abord, on somme PLA_CHI par établissement et on trie par ordre décroissant
dt_intermediaire = data %>% select(FI, PLA_CHI) %>% group_by(FI) %>% summarize(PLA_CHI = sum(PLA_CHI)) %>% arrange(desc(PLA_CHI))
# Puis on sélectionne les 30 premières valeurs de FI pour l'exclusion
finess_a_exclure = dt_intermediaire
# Et on filtre les données en supprimant les lignes avec les finess à exclure
dt_pente_HP = data %>% filter(!FI %in% finess_a_exclure)
for (i in 1:9) {
# On filtre les données car il y a des valeurs extrêmes :
# - On extrait les données pour l'année i
a_i = data.frame(dt_pente_HP %>% filter(AN == 2013) %>% select(PLA_CHI))
# - On extrait les données pour l'année i + 1
a_i_plus = data.frame(dt_pente_HP %>% filter(AN == annee[i+1]) %>% select(PLA_CHI))
# Ajustement du modèle linéaire
mod = lm(a_i_plus[, 1] ~ a_i[, 1])
# On extrait les intervalles de confiance
conf_int = confint(mod)[2,]
# On extrait le coefficient du modèle (pas l'intercept)
coef_summary = summary(mod)$coefficients[1:2, ]
# On ajoute les résultats à la matrice coef_HP
coef_HP = rbind(coef_HP, c(coef_summary[2, 1], conf_int[1], conf_int[2]))
}
# On transforme la matrice en un tableau
coef_HP = data.frame(coef_HP)
# On nomme les colonnes
colnames(coef_HP) = c("Coefficient", "Lower", "Upper")
# On nomme les lignes
rownames(coef_HP) = c(2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022)
# On utilise la fonction foresplot() pour afficher les coefficients et leurs IC
forestplot(rownames(coef_HP), coef_HP$Coefficient,
coef_HP$Lower,
coef_HP$Upper,
zero = 1,
xlab = "Coef (95%)",
col = fpColors(box = c("red4"),
lines = c("skyblue3")),
xticks = seq(0.7,1.3,0.05),
boxsize = 0.1,
vertices = TRUE,
txt_gp = fpTxtGp(label = list(gpar(fontfamily = "",
col = "#660001", cex = .75)),
ticks = gpar(fontfamily = "", cex = .5),
xlab  = gpar(fontfamily = "font", cex = .9)))
summary(dt_intermediaire)
# On initialise une matrice pour stocker le coefficient et les intervalles de confiance
coef_HP = matrix(nrow = 0, ncol = 3)  # 3 colonnes : coefficient, IC inférieur, IC supérieur
annee = c(2013,2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022) # On met les années à étudier
# Maintenant, on filtre en retirant les val. extrêmes :
# - D'abord, on somme PLA_CHI par établissement et on trie par ordre décroissant
dt_pente_HP = data %>% select(FI, PLA_CHI) %>% group_by(FI) %>% summarize(PLA_CHI = sum(PLA_CHI)) %>% arrange(desc(PLA_CHI))
# Puis on sélectionne les 30 premières valeurs de FI pour l'exclusion
finess_a_exclure = dt_intermediaire$FI[1:30]
# Et on filtre les données en supprimant les lignes avec les finess à exclure
#dt_pente_HP = data %>% filter(!FI %in% finess_a_exclure)
for (i in 1:9) {
# On filtre les données car il y a des valeurs extrêmes :
# - On extrait les données pour l'année i
a_i = data.frame(dt_pente_HP %>% filter(AN == 2013) %>% select(PLA_CHI))
# - On extrait les données pour l'année i + 1
a_i_plus = data.frame(dt_pente_HP %>% filter(AN == annee[i+1]) %>% select(PLA_CHI))
# Ajustement du modèle linéaire
mod = lm(a_i_plus[, 1] ~ a_i[, 1])
# On extrait les intervalles de confiance
conf_int = confint(mod)[2,]
# On extrait le coefficient du modèle (pas l'intercept)
coef_summary = summary(mod)$coefficients[1:2, ]
# On ajoute les résultats à la matrice coef_HP
coef_HP = rbind(coef_HP, c(coef_summary[2, 1], conf_int[1], conf_int[2]))
}
# On initialise une matrice pour stocker le coefficient et les intervalles de confiance
coef_HP = matrix(nrow = 0, ncol = 3)  # 3 colonnes : coefficient, IC inférieur, IC supérieur
annee = c(2013,2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022) # On met les années à étudier
# Maintenant, on filtre en retirant les val. extrêmes :
# - D'abord, on somme PLA_CHI par établissement et on trie par ordre décroissant
dt_intermediaire = data %>% select(FI, PLA_CHI) %>% group_by(FI) %>% summarize(PLA_CHI = sum(PLA_CHI)) %>% arrange(desc(PLA_CHI))
# Puis on sélectionne les 15 premières valeurs de FI pour l'exclusion
finess_a_exclure = dt_intermediaire$FI[1:15]
# Et on filtre les données en supprimant les lignes avec les finess à exclure
dt_pente_HP = data %>% filter(!FI %in% finess_a_exclure)
for (i in 1:9) {
# On filtre les données car il y a des valeurs extrêmes :
# - On extrait les données pour l'année i
a_i = data.frame(dt_pente_HP %>% filter(AN == 2013) %>% select(PLA_CHI))
# - On extrait les données pour l'année i + 1
a_i_plus = data.frame(dt_pente_HP %>% filter(AN == annee[i+1]) %>% select(PLA_CHI))
# Ajustement du modèle linéaire
mod = lm(a_i_plus[, 1] ~ a_i[, 1])
# On extrait les intervalles de confiance
conf_int = confint(mod)[2,]
# On extrait le coefficient du modèle (pas l'intercept)
coef_summary = summary(mod)$coefficients[1:2, ]
# On ajoute les résultats à la matrice coef_HP
coef_HP = rbind(coef_HP, c(coef_summary[2, 1], conf_int[1], conf_int[2]))
}
# On transforme la matrice en un tableau
coef_HP = data.frame(coef_HP)
# On nomme les colonnes
colnames(coef_HP) = c("Coefficient", "Lower", "Upper")
# On nomme les lignes
rownames(coef_HP) = c(2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022)
# On utilise la fonction foresplot() pour afficher les coefficients et leurs IC
forestplot(rownames(coef_HP), coef_HP$Coefficient,
coef_HP$Lower,
coef_HP$Upper,
zero = 1,
xlab = "Coef (95%)",
col = fpColors(box = c("red4"),
lines = c("skyblue3")),
xticks = seq(0.7,1.3,0.05),
boxsize = 0.1,
vertices = TRUE,
txt_gp = fpTxtGp(label = list(gpar(fontfamily = "",
col = "#660001", cex = .75)),
ticks = gpar(fontfamily = "", cex = .5),
xlab  = gpar(fontfamily = "font", cex = .9)))
# On initialise une matrice pour stocker le coefficient et les intervalles de confiance
coef_HP = matrix(nrow = 0, ncol = 3)  # 3 colonnes : coefficient, IC inférieur, IC supérieur
annee = c(2013,2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022) # On met les années à étudier
# Maintenant, on filtre en retirant les val. extrêmes :
# - D'abord, on somme PLA_CHI par établissement et on trie par ordre décroissant
dt_pente_HC = data %>% select(FI, PLA_CHI) %>% group_by(FI) %>% summarize(PLA_CHI = sum(PLA_CHI)) %>% arrange(desc(PLA_CHI))
for (i in 1:9) {
# On filtre les données car il y a des valeurs extrêmes :
# - On extrait les données pour l'année i
a_i = data.frame(dt_pente_HP %>% filter(AN == 2013) %>% select(PLA_CHI))
# - On extrait les données pour l'année i + 1
a_i_plus = data.frame(dt_pente_HP %>% filter(AN == annee[i+1]) %>% select(PLA_CHI))
# Ajustement du modèle linéaire
mod = lm(a_i_plus[, 1] ~ a_i[, 1])
# On extrait les intervalles de confiance
conf_int = confint(mod)[2,]
# On extrait le coefficient du modèle (pas l'intercept)
coef_summary = summary(mod)$coefficients[1:2, ]
# On ajoute les résultats à la matrice coef_HP
coef_HP = rbind(coef_HP, c(coef_summary[2, 1], conf_int[1], conf_int[2]))
}
# On transforme la matrice en un tableau
coef_HP = data.frame(coef_HP)
# On nomme les colonnes
colnames(coef_HP) = c("Coefficient", "Lower", "Upper")
# On nomme les lignes
rownames(coef_HP) = c(2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022)
# On utilise la fonction foresplot() pour afficher les coefficients et leurs IC
forestplot(rownames(coef_HP), coef_HP$Coefficient,
coef_HP$Lower,
coef_HP$Upper,
zero = 1,
xlab = "Coef (95%)",
col = fpColors(box = c("red4"),
lines = c("skyblue3")),
xticks = seq(0.7,1.3,0.05),
boxsize = 0.1,
vertices = TRUE,
txt_gp = fpTxtGp(label = list(gpar(fontfamily = "",
col = "#660001", cex = .75)),
ticks = gpar(fontfamily = "", cex = .5),
xlab  = gpar(fontfamily = "font", cex = .9)))
# On initialise une matrice pour stocker le coefficient et les intervalles de confiance
coef_HP = matrix(nrow = 0, ncol = 3)  # 3 colonnes : coefficient, IC inférieur, IC supérieur
annee = c(2013,2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022) # On met les années à étudier
# Maintenant, on filtre en retirant les val. extrêmes :
# - D'abord, on somme PLA_CHI par établissement et on trie par ordre décroissant
dt_pente_HP = data %>% select(FI, PLA_CHI) %>% group_by(FI) %>% summarize(PLA_CHI = sum(PLA_CHI)) %>% arrange(desc(PLA_CHI))
for (i in 1:9) {
# On filtre les données car il y a des valeurs extrêmes :
# - On extrait les données pour l'année i
a_i = data.frame(dt_pente_HP %>% filter(AN == 2013) %>% select(PLA_CHI))
# - On extrait les données pour l'année i + 1
a_i_plus = data.frame(dt_pente_HP %>% filter(AN == annee[i+1]) %>% select(PLA_CHI))
# Ajustement du modèle linéaire
mod = lm(a_i_plus[, 1] ~ a_i[, 1])
# On extrait les intervalles de confiance
conf_int = confint(mod)[2,]
# On extrait le coefficient du modèle (pas l'intercept)
coef_summary = summary(mod)$coefficients[1:2, ]
# On ajoute les résultats à la matrice coef_HP
coef_HP = rbind(coef_HP, c(coef_summary[2, 1], conf_int[1], conf_int[2]))
}
# On initialise une matrice pour stocker le coefficient et les intervalles de confiance
coef_HP = matrix(nrow = 0, ncol = 3)  # 3 colonnes : coefficient, IC inférieur, IC supérieur
annee = c(2013,2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022) # On met les années à étudier
# Maintenant, on filtre en retirant les val. extrêmes :
# - D'abord, on somme PLA_CHI par établissement et on trie par ordre décroissant
dt_intermediaire = data %>% select(FI, PLA_CHI) %>% group_by(FI) %>% summarize(PLA_CHI = sum(PLA_CHI)) %>% arrange(desc(PLA_CHI))
# Puis on sélectionne les 15 premières valeurs de FI pour l'exclusion
finess_a_exclure = dt_intermediaire$FI[1:10]
# Et on filtre les données en supprimant les lignes avec les finess à exclure
dt_pente_HP = data %>% filter(!FI %in% finess_a_exclure)
for (i in 1:9) {
# On filtre les données car il y a des valeurs extrêmes :
# - On extrait les données pour l'année i
a_i = data.frame(dt_pente_HP %>% filter(AN == 2013) %>% select(PLA_CHI))
# - On extrait les données pour l'année i + 1
a_i_plus = data.frame(dt_pente_HP %>% filter(AN == annee[i+1]) %>% select(PLA_CHI))
# Ajustement du modèle linéaire
mod = lm(a_i_plus[, 1] ~ a_i[, 1])
# On extrait les intervalles de confiance
conf_int = confint(mod)[2,]
# On extrait le coefficient du modèle (pas l'intercept)
coef_summary = summary(mod)$coefficients[1:2, ]
# On ajoute les résultats à la matrice coef_HP
coef_HP = rbind(coef_HP, c(coef_summary[2, 1], conf_int[1], conf_int[2]))
}
# On transforme la matrice en un tableau
coef_HP = data.frame(coef_HP)
# On nomme les colonnes
colnames(coef_HP) = c("Coefficient", "Lower", "Upper")
# On nomme les lignes
rownames(coef_HP) = c(2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022)
# On utilise la fonction foresplot() pour afficher les coefficients et leurs IC
forestplot(rownames(coef_HP), coef_HP$Coefficient,
coef_HP$Lower,
coef_HP$Upper,
zero = 1,
xlab = "Coef (95%)",
col = fpColors(box = c("red4"),
lines = c("skyblue3")),
xticks = seq(0.7,1.3,0.05),
boxsize = 0.1,
vertices = TRUE,
txt_gp = fpTxtGp(label = list(gpar(fontfamily = "",
col = "#660001", cex = .75)),
ticks = gpar(fontfamily = "", cex = .5),
xlab  = gpar(fontfamily = "font", cex = .9)))
# On initialise une matrice pour stocker le coefficient et les intervalles de confiance
coef_HP = matrix(nrow = 0, ncol = 3)  # 3 colonnes : coefficient, IC inférieur, IC supérieur
annee = c(2013,2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022) # On met les années à étudier
# Maintenant, on filtre en retirant les val. extrêmes :
# - D'abord, on somme PLA_CHI par établissement et on trie par ordre décroissant
dt_intermediaire = data %>% select(FI, PLA_CHI) %>% group_by(FI) %>% summarize(PLA_CHI = sum(PLA_CHI)) %>% arrange(desc(PLA_CHI))
# Puis on sélectionne les 15 premières valeurs de FI pour l'exclusion
finess_a_exclure = dt_intermediaire
# Et on filtre les données en supprimant les lignes avec les finess à exclure
dt_pente_HP = data %>% filter(!FI %in% finess_a_exclure)
for (i in 1:9) {
# On filtre les données car il y a des valeurs extrêmes :
# - On extrait les données pour l'année i
a_i = data.frame(dt_pente_HP %>% filter(AN == 2013) %>% select(PLA_CHI))
# - On extrait les données pour l'année i + 1
a_i_plus = data.frame(dt_pente_HP %>% filter(AN == annee[i+1]) %>% select(PLA_CHI))
# Ajustement du modèle linéaire
mod = lm(a_i_plus[, 1] ~ a_i[, 1])
# On extrait les intervalles de confiance
conf_int = confint(mod)[2,]
# On extrait le coefficient du modèle (pas l'intercept)
coef_summary = summary(mod)$coefficients[1:2, ]
# On ajoute les résultats à la matrice coef_HP
coef_HP = rbind(coef_HP, c(coef_summary[2, 1], conf_int[1], conf_int[2]))
}
# On transforme la matrice en un tableau
coef_HP = data.frame(coef_HP)
# On nomme les colonnes
colnames(coef_HP) = c("Coefficient", "Lower", "Upper")
# On nomme les lignes
rownames(coef_HP) = c(2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022)
# On utilise la fonction foresplot() pour afficher les coefficients et leurs IC
forestplot(rownames(coef_HP), coef_HP$Coefficient,
coef_HP$Lower,
coef_HP$Upper,
zero = 1,
xlab = "Coef (95%)",
col = fpColors(box = c("red4"),
lines = c("skyblue3")),
xticks = seq(0.7,1.3,0.05),
boxsize = 0.1,
vertices = TRUE,
txt_gp = fpTxtGp(label = list(gpar(fontfamily = "",
col = "#660001", cex = .75)),
ticks = gpar(fontfamily = "", cex = .5),
xlab  = gpar(fontfamily = "font", cex = .9)))
# On initialise une matrice pour stocker le coefficient et les intervalles de confiance
coef_HP = matrix(nrow = 0, ncol = 3)  # 3 colonnes : coefficient, IC inférieur, IC supérieur
annee = c(2013,2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022) # On met les années à étudier
# Maintenant, on filtre les données
# - D'abord, on somme PLA_CHI par établissement
dt_intermediaire = data %>% select(FI, PLA_CHI) %>% group_by(FI) %>% summarize(PLA_CHI = sum(PLA_CHI))
# Et on filtre les données en supprimant les lignes avec les finess à exclure
dt_pente_HP = data %>% filter(FI == dt_intermediaire)
# On initialise une matrice pour stocker le coefficient et les intervalles de confiance
coef_HP = matrix(nrow = 0, ncol = 3)  # 3 colonnes : coefficient, IC inférieur, IC supérieur
annee = c(2013,2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022) # On met les années à étudier
# On crée une base de données intermédaires
dt_pente_HP = data
for (i in 1:9) {
# On filtre les données car il y a des valeurs extrêmes :
# - On extrait les données pour l'année i
a_i = data.frame(dt_pente_HP %>% filter(AN == 2013) %>% select(PLA_CHI))
# - On extrait les données pour l'année i + 1
a_i_plus = data.frame(dt_pente_HP %>% filter(AN == annee[i+1]) %>% select(PLA_CHI))
# Ajustement du modèle linéaire
mod = lm(a_i_plus[, 1] ~ a_i[, 1])
# On extrait les intervalles de confiance
conf_int = confint(mod)[2,]
# On extrait le coefficient du modèle (pas l'intercept)
coef_summary = summary(mod)$coefficients[1:2, ]
# On ajoute les résultats à la matrice coef_HP
coef_HP = rbind(coef_HP, c(coef_summary[2, 1], conf_int[1], conf_int[2]))
}
# On transforme la matrice en un tableau
coef_HP = data.frame(coef_HP)
# On nomme les colonnes
colnames(coef_HP) = c("Coefficient", "Lower", "Upper")
# On nomme les lignes
rownames(coef_HP) = c(2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022)
# On utilise la fonction foresplot() pour afficher les coefficients et leurs IC
forestplot(rownames(coef_HP), coef_HP$Coefficient,
coef_HP$Lower,
coef_HP$Upper,
zero = 1,
xlab = "Coef (95%)",
col = fpColors(box = c("red4"),
lines = c("skyblue3")),
xticks = seq(0.7,1.3,0.05),
boxsize = 0.1,
vertices = TRUE,
txt_gp = fpTxtGp(label = list(gpar(fontfamily = "",
col = "#660001", cex = .75)),
ticks = gpar(fontfamily = "", cex = .5),
xlab  = gpar(fontfamily = "font", cex = .9)))
# On initialise une matrice pour stocker le coefficient et les intervalles de confiance
coef_HC = matrix(nrow = 0, ncol = 3)  # 3 colonnes : coefficient, IC inférieur, IC supérieur
annee = c(2013,2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022) # On met les années à étudier
# On crée une base de données intermédaires
dt_pente_HC = data
for (i in 1:9) {
# On filtre les données car il y a des valeurs extrêmes :
# - On extrait les données pour l'année i
a_i = data.frame(dt_pente_HC %>% filter(AN == 2013) %>% select(LIT_CHI))
# - On extrait les données pour l'année i + 1
a_i_plus = data.frame(dt_pente_HC %>% filter(AN == annee[i+1]) %>% select(LIT_CHI))
# Ajustement du modèle linéaire
mod = lm(a_i_plus[, 1] ~ a_i[, 1])
# On extrait les intervalles de confiance
conf_int = confint(mod)[2,]
# On extrait le coefficient du modèle (pas l'intercept)
coef_summary = summary(mod)$coefficients[1:2, ]
# On ajoute les résultats à la matrice coef_HC
coef_HC = rbind(coef_HC, c(coef_summary[2, 1], conf_int[1], conf_int[2]))
}
# On transforme la matrice en un tableau
coef_HC = data.frame(coef_HC)
# On nomme les colonnes
colnames(coef_HC) = c("Coefficient", "Lower", "Upper")
# On nomme les lignes
rownames(coef_HC) = c(2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022)
# On utilise la fonction foresplot() pour afficher les coefficients et leurs IC
forestplot(rownames(coef_HC), coef_HC$Coefficient,
coef_HC$Lower,
coef_HC$Upper,
zero = 1,
xlab = "Coef (95%)",
col = fpColors(box = c("red4"),
lines = c("skyblue3")),
xticks = seq(0.6,1.1,0.05),
boxsize = 0.1,
vertices = TRUE,
txt_gp = fpTxtGp(label = list(gpar(fontfamily = "",
col = "#660001", cex = .75)),
ticks = gpar(fontfamily = "", cex = .5),
xlab  = gpar(fontfamily = "font", cex = .9)))
# On initialise une matrice pour stocker le coefficient et les intervalles de confiance
coef_HC = matrix(nrow = 0, ncol = 3)  # 3 colonnes : coefficient, IC inférieur, IC supérieur
annee = c(2013,2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022) # On met les années à étudier
# On crée une base de données intermédaires
dt_pente_HC = data
for (i in 1:9) {
# On filtre les données car il y a des valeurs extrêmes :
# - On extrait les données pour l'année i
a_i = data.frame(dt_pente_HC %>% filter(AN == 2013) %>% select(LIT_CHI))
# - On extrait les données pour l'année i + 1
a_i_plus = data.frame(dt_pente_HC %>% filter(AN == annee[i+1]) %>% select(LIT_CHI))
# Ajustement du modèle linéaire
mod = lm(a_i_plus[, 1] ~ a_i[, 1])
# On extrait les intervalles de confiance
conf_int = confint(mod)[2,]
# On extrait le coefficient du modèle (pas l'intercept)
coef_summary = summary(mod)$coefficients[1:2, ]
# On ajoute les résultats à la matrice coef_HC
coef_HC = rbind(coef_HC, c(coef_summary[2, 1], conf_int[1], conf_int[2]))
}
# On transforme la matrice en un tableau
coef_HC = data.frame(coef_HC)
# On nomme les colonnes
colnames(coef_HC) = c("Coefficient", "Lower", "Upper")
# On nomme les lignes
rownames(coef_HC) = c(2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022)
# On utilise la fonction foresplot() pour afficher les coefficients et leurs IC
forestplot(rownames(coef_HC), coef_HC$Coefficient,
coef_HC$Lower,
coef_HC$Upper,
zero = 1,
xlab = "Coef (95%)",
col = fpColors(box = c("red4"),
lines = c("skyblue3")),
xticks = seq(0.7,1.1,0.05),
boxsize = 0.1,
vertices = TRUE,
txt_gp = fpTxtGp(label = list(gpar(fontfamily = "",
col = "#660001", cex = .75)),
ticks = gpar(fontfamily = "", cex = .5),
xlab  = gpar(fontfamily = "font", cex = .9)))
# On effectue le test de Mann-Kendall sur la série chronologique des années
mann_kendall_test = Kendall(dt_pente_HP$AN, dt_pente_HP$SEJHP_CH)
# On affiche les résultats du test
mann_kendall_test
### regression
data$ID = as.numeric(1:7970)
library(lme4)
library(lmerTest)
# Calcul du nombre d'infirmier
data$inf = data$N2200 + data$N2510
# transformation de la variable STJR en factor
data$STJR = as.factor(data$STJR)
### Création de 3 groupes pour le nombre de séjour de 0 nuit
# - Infirmiers
# Calculer les quartiles en ignorant les NA
quantile = quantile(data$inf, probs = c(0, 1/3, 2/3, 1), na.rm = TRUE)
# Utiliser les quartiles pour diviser les données en 3 groupes
groupes = cut(data$inf, breaks = quantile, labels = c("[0 ; 16.6]", "[16.7 ; 32.94]", "[32.95 ; 369.99]"), include.lowest = TRUE)
data$inf2 = groupes
# - SEJ0_HC
# Calculer les quartiles en ignorant les NA
quantile = quantile(data$SEJ0_CHI, probs = c(0, 1/3, 2/3, 1), na.rm = TRUE)
# Utiliser les quartiles pour diviser les données en 3 groupes
groupes = cut(data$SEJ0_CHI, breaks = quantile, labels = c("[0 ; 41]", "[42 ; 157]", "[158 ; 18792]"), include.lowest = TRUE)
data$SEJ0_CHI2 = groupes
# Modèle
mod_HC = lmer(LIT_CHI ~ 1 + (SEJ0_CHI2) + (STJR) + (AN) + (inf2) + (1 | FI) + (1 | departement) + (1 | region), data = data)
summary(mod_HC)
icc(mod_HC, by_group = TRUE)
# Pour expliquer les parts de variances
library(performance)
icc(mod_HC, by_group = TRUE)
1 - 95.1 - 0.4
100 - 95.1 - 0.4
0.951 + 0.004
95.1+0.4+0.00000000001295
1- (95.1+0.4+0.00000000001295)
100- (95.1+0.4+0.00000000001295)
icc(mod_HP, by_group = TRUE)
### Création de 3 groupes pour le nombre de séjour de 0 nuit
# - Infirmiers
# Calculer les quartiles en ignorant les NA
quantile = quantile(data$SEJHP_CHI, probs = c(0, 1/3, 2/3, 1), na.rm = TRUE)
# Utiliser les quartiles pour diviser les données en 3 groupes
groupes = cut(data$SEJHP_CHI, breaks = quantile, labels = c("[0 ; 2532]", "[2533 ; 6024]", "[6024 ; 52975]"), include.lowest = TRUE)
data$SEJHP_CHI2 = groupes
# Modèle
mod_HP = lmer(PLA_CHI ~ 1 + (SEJHP_CHI2) + (STJR) + (AN) + (inf2) + (1 | FI) + (1 | departement) + (1 | region), data = data)
summary(mod_HP)
icc(mod_HP, by_group = TRUE)
1 - 0.772-0.007-0.024
